name: Build Googletest Release

on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    env:
      PYTHON_VERSION: "=3.9.7"
      WINLIBS_FILE_NAME_STEM: "winlibs-x86_64-posix-seh-gcc-11.2.0-llvm-13.0.0-mingw-w64ucrt-9.0.0-r2"
      WINLIBS_DOWNLOAD_PATH: "https://github.com/brechtsanders/winlibs_mingw/releases/download/11.2.0-13.0.0-9.0.0-ucrt-r2/winlibs-x86_64-posix-seh-gcc-11.2.0-llvm-13.0.0-mingw-w64ucrt-9.0.0-r2.zip"
      RELEASE_FILE_NAME_STEM: googletest-g++-win-1.10.0

    steps:
      - name: Setup Python
        uses: actions/setup-python@v2.2.2
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          architecture: x64

      - name: Install CMake
        uses: lukka/get-cmake@v3.21.2

      - name: Download WinLibs MinGW
        uses: carlosperate/download-file-action@v1.0.3
        with:
            file-url: 'https://github.com/brechtsanders/winlibs_mingw/releases/download/11.2.0-13.0.0-9.0.0-ucrt-r2/winlibs-x86_64-posix-seh-gcc-11.2.0-llvm-13.0.0-mingw-w64ucrt-9.0.0-r2.zip'
            file-name: 'mingw.zip'
            location: './'

      - name: Extract MinGW
        run: Expand-Archive ./mingw.zip -DestinationPath ~/$env:WINLIBS_FILE_NAME_STEM

      - uses: actions/checkout@v2

      - name: Build googletest
        run: ./build.ps1 $(Resolve-Path ~/$env:WINLIBS_FILE_NAME_STEM/mingw64/bin/)

      - name: Compress dist release
        # TODO: parameterize script on googletest version; include pipeline ID in zip name
        run: Compress-Archive -Path ./dist/$env:RELEASE_FILE_NAME_STEM -DestinationPath ($env:RELEASE_FILE_NAME_STEM + ".zip")

      - name: Publish release
        uses: softprops/action-gh-release@v1
        # TODO: enable pipeline on MRs, only release on master
        # TODO: support more intelligent/configurable tag, name and release notes
        with:
          tag_name: auto-build-${{ github.run_number }}
          files: ${{ env.RELEASE_FILE_NAME_STEM }}.zip
